runspec started at Sat Feb  8 07:06:24 2020 on "yavin"
runspec is: /scratch/adrianh/SPECcpu2006/bin/runspec
runspec: runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran

Locating benchmarks...found 31 benchmarks in 12 benchsets.
Locating output formats: ASCII, config, CSV, flags, HTML, mail, PDF, PostScript, raw, Screen, Submission Check
Reading config file '/scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg'
Verbosity = 5
Action    = validate
Tune      = base
Ext       = fuzzalloc-access-heapify-structs
Size      = ref
Machine   = default
benchmarks= 400.perlbench,401.bzip2,403.gcc,429.mcf,433.milc,444.namd,445.gobmk,447.dealII,450.soplex,453.povray,456.hmmer,458.sjeng,462.libquantum,464.h264ref,470.lbm,471.omnetpp,473.astar,482.sphinx3,483.xalancbmk,998.specrand,999.specrand
outputs   = raw,flags,ASCII,PDF,Screen
username  = adrianh
Benchmarks selected: 400.perlbench, 401.bzip2, 403.gcc, 429.mcf, 433.milc, 444.namd, 445.gobmk, 447.dealII, 450.soplex, 453.povray, 456.hmmer, 458.sjeng, 462.libquantum, 464.h264ref, 470.lbm, 471.omnetpp, 473.astar, 482.sphinx3, 483.xalancbmk, 998.specrand, 999.specrand
Compiling Binaries

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/400.perlbench/exe/perlbench_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 400.perlbench ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/400.perlbench/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

$(addsuffix $(OBJ), $(basename perl.c)): perl.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename doio.c)): doio.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perlhost.h)): perlhost.h iperlsys.h vmem.h vdir.h perlio.h
$(addsuffix $(OBJ), $(basename universal.c)): universal.c perliol.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename locale.c)): locale.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename win32thread.c)): win32thread.c win32.h win32iop.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename op.c)): op.c keywords.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename av.c)): av.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename gv.c)): gv.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perly.c)): perly.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename proto.h)): proto.h pp_proto.h
$(addsuffix $(OBJ), $(basename xsutils.c)): xsutils.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename mg.c)): mg.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Base64.c)): Base64.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perllib.c)): perllib.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename IO.c)): IO.c poll.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename iperlsys.h)): iperlsys.h perlio.h
$(addsuffix $(OBJ), $(basename toke.c)): toke.c keywords.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename doop.c)): doop.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Storable.c)): Storable.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perlapi.c)): perlapi.c perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Dumper.c)): Dumper.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perlmain.c)): perlmain.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename hparser.c)): hparser.c hctype.h tokenpos.h
$(addsuffix $(OBJ), $(basename sv.c)): sv.c regcomp.h regnodes.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename HiRes.c)): HiRes.c const-c.inc XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename taint.c)): taint.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename perlio.c)): perlio.c perlsdio.h perliol.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pad.c)): pad.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename DynaLoader.c)): DynaLoader.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename regcomp.c)): regcomp.c INTERN.h regcomp.h regnodes.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename utf8.c)): utf8.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename util.c)): util.c specrand.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename scope.c)): scope.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename miniperlmain.c)): miniperlmain.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename win32io.c)): win32io.c perliol.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename config.h)): config.h spec_config.h
$(addsuffix $(OBJ), $(basename attrs.c)): attrs.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename XSUB.h)): XSUB.h perlapi.h
$(addsuffix $(OBJ), $(basename numeric.c)): numeric.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp_pack.c)): pp_pack.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Cwd.c)): Cwd.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename MD5.c)): MD5.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp_hot.c)): pp_hot.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename poll.c)): poll.c poll.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp_sys.c)): pp_sys.c reentr.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename run.c)): run.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename globals.c)): globals.c INTERN.h perlapi.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename regexec.c)): regexec.c regcomp.h regnodes.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Hostname.c)): Hostname.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Peek.c)): Peek.c XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp_ctl.c)): pp_ctl.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename win32sck.c)): win32sck.c win32iop.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename Parser.c)): Parser.c hparser.h parser-util.c hparser.c hctype.h tokenpos.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename hv.c)): hv.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename deb.c)): deb.c EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp_sort.c)): pp_sort.c specrand.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename pp.c)): pp.c reentr.h keywords.h specrand.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename win32.c)): win32.c win32iop.h XSUB.h perlapi.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
$(addsuffix $(OBJ), $(basename dump.c)): dump.c regcomp.h regnodes.h EXTERN.h perl.h config.h spec_config.h embed.h handy.h iperlsys.h perlio.h regexp.h sv.h util.h form.h gv.h pad.h cv.h opnames.h op.h cop.h av.h hv.h mg.h scope.h warnings.h utf8.h perly.h thread.h pp.h proto.h pp_proto.h opcode.h embedvar.h intrpvar.h thrdvar.h perlvars.h patchlevel.h
# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/400.perlbench/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=400
NAME=perlbench
SOURCES= av.c deb.c doio.c doop.c dump.c globals.c gv.c hv.c locale.c mg.c \
	 numeric.c op.c pad.c perl.c perlapi.c perlio.c perlmain.c perly.c pp.c \
	 pp_ctl.c pp_hot.c pp_pack.c pp_sort.c pp_sys.c regcomp.c regexec.c run.c \
	 scope.c sv.c taint.c toke.c universal.c utf8.c util.c xsutils.c Base64.c \
	 Cwd.c Dumper.c HiRes.c IO.c Peek.c attrs.c poll.c stdio.c DynaLoader.c \
	 MD5.c Storable.c Parser.c specrand.c Hostname.c Opcode.c
EXEBASE=perlbench
NEED_MATH=yes
BENCHLANG=C
ONESTEP=
CONESTEP=

BENCH_FLAGS      = -DPERL_CORE
CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CPORTABILITY     = -DSPEC_CPU_LINUX_X64 -std=gnu89
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = perlbench
basepeak         = 0
benchdir         = benchspec
benchmark        = 400.perlbench
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = perlbench_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = perlbench
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes35          =  400.perlbench: -DSPEC_CPU_LINUX_X64
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 400
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/400.perlbench
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '400.perlbench' started at: Sat Feb  8 07:06:28 2020 (1581105988)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:28 2020 (1581105988)
rm -rf perlbench perlbench.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:29 2020 (1581105989)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:29 2020 (1581105989)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o av.o -DSPEC_CPU -DNDEBUG -DPERL_CORE          -DSPEC_CPU_LP64 -DSPEC_CPU_LINUX_X64 -std=gnu89        av.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [av.o] Error 1
Stop make command: Sat Feb  8 07:06:30 2020 (1581105990)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/400.perlbench/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '400.perlbench' ended at: Sat Feb  8 07:06:30 2020 (1581105990)
  Elapsed compile for '400.perlbench': 00:00:02 (2)
*** Error building 400.perlbench

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/401.bzip2/exe/bzip2_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 401.bzip2 ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/401.bzip2/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/401.bzip2/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=401
NAME=bzip2
SOURCES= spec.c blocksort.c bzip2.c bzlib.c compress.c crctable.c \
	 decompress.c huffman.c randtable.c
EXEBASE=bzip2
NEED_MATH=
BENCHLANG=C
ONESTEP=
CONESTEP=

CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = bzip2
basepeak         = 0
benchdir         = benchspec
benchmark        = 401.bzip2
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = bzip2_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = bzip2
nc               = 0
need_math        = 
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 401
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/401.bzip2
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '401.bzip2' started at: Sat Feb  8 07:06:30 2020 (1581105990)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:30 2020 (1581105990)
rm -rf bzip2 bzip2.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:31 2020 (1581105991)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:31 2020 (1581105991)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o spec.o -DSPEC_CPU -DNDEBUG           -DSPEC_CPU_LP64         spec.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [spec.o] Error 1
Stop make command: Sat Feb  8 07:06:32 2020 (1581105992)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/401.bzip2/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '401.bzip2' ended at: Sat Feb  8 07:06:32 2020 (1581105992)
  Elapsed compile for '401.bzip2': 00:00:02 (2)
*** Error building 401.bzip2

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/403.gcc/exe/gcc_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 403.gcc ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/403.gcc/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/403.gcc/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=403
NAME=gcc
SOURCES= alloca.c asprintf.c vasprintf.c c-parse.c c-lang.c attribs.c \
	 c-errors.c c-lex.c c-pragma.c c-decl.c c-typeck.c c-convert.c \
	 c-aux-info.c c-common.c c-format.c c-semantics.c c-objc-common.c main.c \
	 cpplib.c cpplex.c cppmacro.c cppexp.c cppfiles.c cpphash.c cpperror.c \
	 cppinit.c cppdefault.c line-map.c mkdeps.c prefix.c version.c mbchar.c \
	 alias.c bb-reorder.c bitmap.c builtins.c caller-save.c calls.c cfg.c \
	 cfganal.c cfgbuild.c cfgcleanup.c cfglayout.c cfgloop.c cfgrtl.c \
	 combine.c conflict.c convert.c cse.c cselib.c dbxout.c debug.c \
	 dependence.c df.c diagnostic.c doloop.c dominance.c dwarf2asm.c \
	 dwarf2out.c dwarfout.c emit-rtl.c except.c explow.c expmed.c expr.c \
	 final.c flow.c fold-const.c function.c gcse.c genrtl.c ggc-common.c \
	 global.c graph.c haifa-sched.c hash.c hashtable.c hooks.c ifcvt.c \
	 insn-attrtab.c insn-emit.c insn-extract.c insn-opinit.c insn-output.c \
	 insn-peep.c insn-recog.c integrate.c intl.c jump.c langhooks.c lcm.c \
	 lists.c local-alloc.c loop.c obstack.c optabs.c params.c predict.c \
	 print-rtl.c print-tree.c profile.c real.c recog.c reg-stack.c regclass.c \
	 regmove.c regrename.c reload.c reload1.c reorg.c resource.c rtl.c \
	 rtlanal.c rtl-error.c sbitmap.c sched-deps.c sched-ebb.c sched-rgn.c \
	 sched-vis.c sdbout.c sibcall.c simplify-rtx.c ssa.c ssa-ccp.c ssa-dce.c \
	 stmt.c stor-layout.c stringpool.c timevar.c toplev.c tree.c tree-dump.c \
	 tree-inline.c unroll.c varasm.c varray.c vmsdbgout.c xcoffout.c \
	 ggc-page.c i386.c xmalloc.c xexit.c hashtab.c safe-ctype.c splay-tree.c \
	 xstrdup.c md5.c fibheap.c xstrerror.c concat.c partition.c hex.c \
	 lbasename.c getpwd.c ucbqsort.c
EXEBASE=gcc
NEED_MATH=yes
BENCHLANG=C
ONESTEP=
CONESTEP=

BENCH_FLAGS      = -I.
CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = gcc
basepeak         = 0
benchdir         = benchspec
benchmark        = 403.gcc
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = gcc_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = gcc
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 403
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/403.gcc
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '403.gcc' started at: Sat Feb  8 07:06:32 2020 (1581105992)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:32 2020 (1581105992)
rm -rf gcc gcc.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:33 2020 (1581105993)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:33 2020 (1581105993)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o alloca.o -DSPEC_CPU -DNDEBUG -I.          -DSPEC_CPU_LP64         alloca.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [alloca.o] Error 1
Stop make command: Sat Feb  8 07:06:34 2020 (1581105994)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/403.gcc/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '403.gcc' ended at: Sat Feb  8 07:06:34 2020 (1581105994)
  Elapsed compile for '403.gcc': 00:00:02 (2)
*** Error building 403.gcc

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/429.mcf/exe/mcf_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 429.mcf ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/429.mcf/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/429.mcf/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=429
NAME=mcf
SOURCES= mcf.c mcfutil.c readmin.c implicit.c pstart.c output.c treeup.c \
	 pbla.c pflowup.c psimplex.c pbeampp.c
EXEBASE=mcf
NEED_MATH=yes
BENCHLANG=C
ONESTEP=
CONESTEP=

BENCH_CFLAGS     = -DWANT_STDC_PROTO
CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = mcf
basepeak         = 0
benchdir         = benchspec
benchmark        = 429.mcf
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = mcf_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = mcf
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 429
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/429.mcf
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '429.mcf' started at: Sat Feb  8 07:06:34 2020 (1581105994)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:34 2020 (1581105994)
rm -rf mcf mcf.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:35 2020 (1581105995)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:35 2020 (1581105995)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o mcf.o -DSPEC_CPU -DNDEBUG  -DWANT_STDC_PROTO         -DSPEC_CPU_LP64         mcf.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [mcf.o] Error 1
Stop make command: Sat Feb  8 07:06:36 2020 (1581105996)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/429.mcf/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '429.mcf' ended at: Sat Feb  8 07:06:36 2020 (1581105996)
  Elapsed compile for '429.mcf': 00:00:02 (2)
*** Error building 429.mcf

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/433.milc/exe/milc_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 433.milc ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/433.milc/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/433.milc/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=433
NAME=milc
SOURCES= control.c f_meas.c gauge_info.c setup.c update.c update_h.c \
	 update_u.c layout_hyper.c check_unitarity.c d_plaq4.c gaugefix2.c \
	 io_helpers.c io_lat4.c make_lattice.c path_product.c ploop3.c ranmom.c \
	 ranstuff.c reunitarize2.c gauge_stuff.c grsource_imp.c mat_invert.c \
	 quark_stuff.c rephase.c cmplx.c addmat.c addvec.c clear_mat.c clearvec.c \
	 m_amatvec.c m_mat_an.c m_mat_na.c m_mat_nn.c m_matvec.c make_ahmat.c \
	 rand_ahmat.c realtr.c s_m_a_mat.c s_m_a_vec.c s_m_s_mat.c s_m_vec.c \
	 s_m_mat.c su3_adjoint.c su3_dot.c su3_rdot.c su3_proj.c su3mat_copy.c \
	 submat.c subvec.c trace_su3.c uncmp_ahmat.c msq_su3vec.c sub4vecs.c \
	 m_amv_4dir.c m_amv_4vec.c m_mv_s_4dir.c m_su2_mat_vec_n.c l_su2_hit_n.c \
	 r_su2_hit_a.c m_su2_mat_vec_a.c gaussrand.c byterevn.c m_mat_hwvec.c \
	 m_amat_hwvec.c dslash_fn2.c d_congrad5_fn.c com_vanilla.c io_nonansi.c
EXEBASE=milc
NEED_MATH=yes
BENCHLANG=C
ONESTEP=
CONESTEP=

BENCH_FLAGS      = -I. -DFN -DFAST -DCONGRAD_TMP_VECTORS -DDSLASH_TMP_LINKS
CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = milc
basepeak         = 0
benchdir         = benchspec
benchmark        = 433.milc
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = milc_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = milc
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 433
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/433.milc
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '433.milc' started at: Sat Feb  8 07:06:36 2020 (1581105996)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:36 2020 (1581105996)
rm -rf milc milc.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:37 2020 (1581105997)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:37 2020 (1581105997)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o control.o -DSPEC_CPU -DNDEBUG -I. -DFN -DFAST -DCONGRAD_TMP_VECTORS -DDSLASH_TMP_LINKS          -DSPEC_CPU_LP64         control.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [control.o] Error 1
Stop make command: Sat Feb  8 07:06:39 2020 (1581105999)
Elapsed time for make command: 00:00:02 (2)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/433.milc/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '433.milc' ended at: Sat Feb  8 07:06:39 2020 (1581105999)
  Elapsed compile for '433.milc': 00:00:03 (3)
*** Error building 433.milc

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/444.namd/exe/namd_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 444.namd ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/444.namd/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/444.namd/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=444
NAME=namd
SOURCES= Compute.C ComputeList.C ComputeNonbondedUtil.C LJTable.C \
	 Molecule.C Patch.C PatchList.C ResultSet.C SimParameters.C erf.C \
	 spec_namd.C
EXEBASE=namd
NEED_MATH=yes
BENCHLANG=CXX
ONESTEP=
CXXONESTEP=

CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = namd
basepeak         = 0
benchdir         = benchspec
benchmark        = 444.namd
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = namd_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = namd
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 444
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/444.namd
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '444.namd' started at: Sat Feb  8 07:06:39 2020 (1581105999)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:39 2020 (1581105999)
rm -rf namd namd.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:40 2020 (1581106000)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:40 2020 (1581106000)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++ -c -o Compute.o -DSPEC_CPU -DNDEBUG       -DSPEC_CPU_LP64       Compute.C
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [Compute.o] Error 1
Stop make command: Sat Feb  8 07:06:41 2020 (1581106001)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/444.namd/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '444.namd' ended at: Sat Feb  8 07:06:41 2020 (1581106001)
  Elapsed compile for '444.namd': 00:00:02 (2)
*** Error building 444.namd

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/445.gobmk/exe/gobmk_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 445.gobmk ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/445.gobmk/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/445.gobmk/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=445
NAME=gobmk
SOURCES= sgf/sgf_utils.c sgf/sgftree.c sgf/sgfnode.c engine/aftermath.c \
	 engine/board.c engine/cache.c engine/combination.c engine/dragon.c \
	 engine/filllib.c engine/fuseki.c engine/genmove.c engine/hash.c \
	 engine/influence.c engine/interface.c engine/matchpat.c \
	 engine/move_reasons.c engine/movelist.c engine/optics.c engine/owl.c \
	 engine/printutils.c engine/readconnect.c engine/reading.c engine/score.c \
	 engine/semeai.c engine/sgfdecide.c engine/sgffile.c engine/shapes.c \
	 engine/showbord.c engine/utils.c engine/value_moves.c engine/worm.c \
	 engine/globals.c engine/persistent.c engine/handicap.c engine/surround.c \
	 interface/gtp.c interface/main.c interface/play_ascii.c \
	 interface/play_gtp.c interface/play_solo.c interface/play_test.c \
	 patterns/connections.c patterns/dfa.c patterns/helpers.c \
	 patterns/transform.c patterns/owl_attackpat.c patterns/conn.c \
	 patterns/patterns.c patterns/apatterns.c patterns/dpatterns.c \
	 patterns/owl_vital_apat.c patterns/eyes.c patterns/influence.c \
	 patterns/barriers.c patterns/endgame.c patterns/aa_attackpat.c \
	 patterns/owl_defendpat.c patterns/fusekipat.c patterns/fuseki9.c \
	 patterns/fuseki13.c patterns/fuseki19.c patterns/josekidb.c \
	 patterns/handipat.c utils/getopt.c utils/getopt1.c utils/gg_utils.c \
	 utils/random.c
EXEBASE=gobmk
NEED_MATH=yes
BENCHLANG=C
ONESTEP=
CONESTEP=

BENCH_FLAGS      = -DHAVE_CONFIG_H -I. -I.. -I../include -I./include
CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = gobmk
basepeak         = 0
benchdir         = benchspec
benchmark        = 445.gobmk
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = gobmk_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = gobmk
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 445
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/445.gobmk
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '445.gobmk' started at: Sat Feb  8 07:06:41 2020 (1581106001)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:41 2020 (1581106001)
rm -rf gobmk gobmk.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:42 2020 (1581106002)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:42 2020 (1581106002)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o sgf/sgf_utils.o -DSPEC_CPU -DNDEBUG -DHAVE_CONFIG_H -I. -I.. -I../include -I./include          -DSPEC_CPU_LP64         sgf/sgf_utils.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [sgf/sgf_utils.o] Error 1
Stop make command: Sat Feb  8 07:06:43 2020 (1581106003)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/445.gobmk/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '445.gobmk' ended at: Sat Feb  8 07:06:43 2020 (1581106003)
  Elapsed compile for '445.gobmk': 00:00:02 (2)
*** Error building 445.gobmk

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/447.dealII/exe/dealII_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 447.dealII ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/447.dealII/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/447.dealII/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=447
NAME=dealII
SOURCES= auto_derivative_function.cc block_sparse_matrix.cc \
	 block_sparse_matrix_ez.cc block_sparsity_pattern.cc block_vector.cc \
	 compressed_sparsity_pattern.cc data_out.cc data_out_base.cc \
	 data_out_faces.cc data_out_rotation.cc data_out_stack.cc \
	 derivative_approximation.cc dof_accessor.cc dof_constraints.cc \
	 dof_handler.cc dof_levels.cc dof_renumbering.cc dof_tools.cc \
	 error_estimator.cc exceptions.cc fe.cc fe_data.cc fe_dgp.cc fe_dgp_1d.cc \
	 fe_dgp_2d.cc fe_dgp_3d.cc fe_dgp_nonparametric.cc fe_dgq.cc fe_dgq_1d.cc \
	 fe_dgq_2d.cc fe_dgq_3d.cc fe_nedelec.cc fe_nedelec_1d.cc \
	 fe_nedelec_2d.cc fe_nedelec_3d.cc fe_q.cc fe_q_1d.cc fe_q_2d.cc \
	 fe_q_3d.cc fe_q_hierarchical.cc fe_raviart_thomas.cc fe_system.cc \
	 fe_tools.cc fe_values.cc filtered_matrix.cc full_matrix.double.cc \
	 full_matrix.float.cc function.cc function_derivative.cc function_lib.cc \
	 function_lib_cutoff.cc function_time.cc geometry_info.cc \
	 grid_generator.cc grid_in.cc grid_out.all_dimensions.cc grid_out.cc \
	 grid_refinement.cc grid_reordering.cc histogram.cc intergrid_map.cc \
	 job_identifier.cc log.cc mapping.cc mapping_c1.cc mapping_cartesian.cc \
	 mapping_q.cc mapping_q1.cc mapping_q1_eulerian.cc \
	 matrices.all_dimensions.cc matrices.cc matrix_lib.cc matrix_out.cc \
	 memory_consumption.cc mg_base.cc mg_dof_accessor.cc mg_dof_handler.cc \
	 mg_dof_tools.cc mg_smoother.cc mg_transfer_block.cc \
	 mg_transfer_prebuilt.cc mg_transfer_block.all_dimensions.cc \
	 multigrid.all_dimensions.cc multithread_info.cc parameter_handler.cc \
	 persistent_tria.cc polynomial.cc polynomial_space.cc programid.cc \
	 quadrature.cc quadrature_lib.cc solution_transfer.cc solver_control.cc \
	 sparse_matrix.double.cc sparse_matrix.float.cc \
	 sparse_matrix_ez.double.cc sparse_matrix_ez.float.cc sparsity_pattern.cc \
	 step-14.cc subscriptor.cc swappable_vector.cc tensor.cc \
	 tensor_product_polynomials.cc tria.all_dimensions.cc tria.cc \
	 tria_accessor.cc tria_boundary.cc tria_boundary_lib.cc vector.cc \
	 vector.long_double.cc vectors.all_dimensions.cc fe_dgp_monomial.cc \
	 fe_poly.cc polynomials_bdm.cc polynomials_p.cc fe_dgp_monomial.cc \
	 fe_poly.cc polynomials_bdm.cc polynomials_p.cc vectors.cc
EXEBASE=dealII
NEED_MATH=
BENCHLANG=CXX
ONESTEP=
CXXONESTEP=

BENCH_CXXFLAGS   = -Iinclude -DBOOST_DISABLE_THREADS -Ddeal_II_dimension=3
CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
CXXPORTABILITY   = -std=gnu++98 -include cstddef -include cstdlib -include cstring
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 1e-07
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = dealII
basepeak         = 0
benchdir         = benchspec
benchmark        = 447.dealII
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = dealII_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = dealII
nc               = 0
need_math        = 
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 447
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/447.dealII
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '447.dealII' started at: Sat Feb  8 07:06:43 2020 (1581106003)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:43 2020 (1581106003)
rm -rf dealII dealII.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:44 2020 (1581106004)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:44 2020 (1581106004)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++ -c -o auto_derivative_function.o -DSPEC_CPU -DNDEBUG  -Iinclude -DBOOST_DISABLE_THREADS -Ddeal_II_dimension=3     -DSPEC_CPU_LP64 -std=gnu++98 -include cstddef -include cstdlib -include cstring      auto_derivative_function.cc
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [auto_derivative_function.o] Error 1
Stop make command: Sat Feb  8 07:06:45 2020 (1581106005)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/447.dealII/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '447.dealII' ended at: Sat Feb  8 07:06:45 2020 (1581106005)
  Elapsed compile for '447.dealII': 00:00:02 (2)
*** Error building 447.dealII

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/450.soplex/exe/soplex_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 450.soplex ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/450.soplex/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/450.soplex/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=450
NAME=soplex
SOURCES= changesoplex.cc didxset.cc dsvector.cc dvector.cc enter.cc \
	 example.cc factor.cc forest.cc idxset.cc leave.cc lpcolset.cc lprow.cc \
	 lprowset.cc message.cc mpsinput.cc nameset.cc slufactor.cc solve.cc \
	 soplex.cc spxaggregatesm.cc spxbasis.cc spxbounds.cc spxchangebasis.cc \
	 spxdefaultpr.cc spxdefaultrt.cc spxdefines.cc spxdesc.cc spxdevexpr.cc \
	 spxequilisc.cc spxfastrt.cc spxgeneralsm.cc spxharrisrt.cc \
	 spxhybridpr.cc spxid.cc spxio.cc spxlp.cc spxlpfread.cc spxmpsread.cc \
	 spxmpswrite.cc spxparmultpr.cc spxquality.cc spxredundantsm.cc \
	 spxrem1sm.cc spxscaler.cc spxshift.cc spxsolve.cc spxsolver.cc \
	 spxstarter.cc spxsteeppr.cc spxsumst.cc spxvecs.cc spxvectorst.cc \
	 spxweightpr.cc spxweightst.cc ssvector.cc svector.cc svset.cc timer.cc \
	 unitvector.cc update.cc updatevector.cc vector.cc vsolve.cc
EXEBASE=soplex
NEED_MATH=yes
BENCHLANG=CXX
ONESTEP=
CXXONESTEP=

CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
CXXPORTABILITY   = -std=gnu++98
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = soplex
basepeak         = 0
benchdir         = benchspec
benchmark        = 450.soplex
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = soplex_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = soplex
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 450
obiwan           = 1
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/450.soplex
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '450.soplex' started at: Sat Feb  8 07:06:45 2020 (1581106005)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:45 2020 (1581106005)
rm -rf soplex soplex.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:46 2020 (1581106006)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:46 2020 (1581106006)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++ -c -o changesoplex.o -DSPEC_CPU -DNDEBUG       -DSPEC_CPU_LP64 -std=gnu++98      changesoplex.cc
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [changesoplex.o] Error 1
Stop make command: Sat Feb  8 07:06:47 2020 (1581106007)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/450.soplex/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '450.soplex' ended at: Sat Feb  8 07:06:47 2020 (1581106007)
  Elapsed compile for '450.soplex': 00:00:02 (2)
*** Error building 450.soplex

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/453.povray/exe/povray_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 453.povray ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/453.povray/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/453.povray/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=453
NAME=povray
SOURCES= atmosph.cpp bbox.cpp bcyl.cpp bezier.cpp blob.cpp boxes.cpp \
	 bsphere.cpp camera.cpp chi2.cpp colour.cpp colutils.cpp cones.cpp \
	 csg.cpp defaultplatformbase.cpp defaultrenderfrontend.cpp discs.cpp \
	 express.cpp fileinputoutput.cpp fncode.cpp fnintern.cpp fnpovfpu.cpp \
	 fnsyntax.cpp fpmetric.cpp fractal.cpp function.cpp hcmplx.cpp hfield.cpp \
	 histogra.cpp iff.cpp image.cpp interior.cpp isosurf.cpp lathe.cpp \
	 lbuffer.cpp lightgrp.cpp lighting.cpp mathutil.cpp matrices.cpp \
	 media.cpp mesh.cpp messageoutput.cpp normal.cpp objects.cpp octree.cpp \
	 optout.cpp parse.cpp parsestr.cpp parstxtr.cpp pattern.cpp pgm.cpp \
	 photons.cpp pigment.cpp planes.cpp point.cpp poly.cpp polygon.cpp \
	 polysolv.cpp pov_mem.cpp pov_util.cpp povms.cpp povmscpp.cpp \
	 povmsend.cpp povmsrec.cpp povray.cpp ppm.cpp prism.cpp \
	 processoptions.cpp processrenderoptions.cpp quadrics.cpp quatern.cpp \
	 rad_data.cpp radiosit.cpp ray.cpp rendctrl.cpp render.cpp \
	 renderfrontend.cpp renderio.cpp sor.cpp specrand.cpp spec_qsort.cpp \
	 spheres.cpp sphsweep.cpp splines.cpp statspov.cpp stringutilities.cpp \
	 super.cpp targa.cpp textstream.cpp textstreambuffer.cpp texture.cpp \
	 tokenize.cpp torus.cpp triangle.cpp truetype.cpp txttest.cpp \
	 userdisp.cpp userio.cpp vbuffer.cpp vlbuffer.cpp warps.cpp
EXEBASE=povray
NEED_MATH=yes
BENCHLANG=CXX
ONESTEP=
CXXONESTEP=

CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 0
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = povray
basepeak         = 0
benchdir         = benchspec
benchmark        = 453.povray
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = povray_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = povray
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 453
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/453.povray
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '453.povray' started at: Sat Feb  8 07:06:47 2020 (1581106007)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:47 2020 (1581106007)
rm -rf povray povray.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:48 2020 (1581106008)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:48 2020 (1581106008)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++ -c -o atmosph.o -DSPEC_CPU -DNDEBUG       -DSPEC_CPU_LP64       atmosph.cpp
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [atmosph.o] Error 1
Stop make command: Sat Feb  8 07:06:49 2020 (1581106009)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/453.povray/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '453.povray' ended at: Sat Feb  8 07:06:49 2020 (1581106009)
  Elapsed compile for '453.povray': 00:00:02 (2)
*** Error building 453.povray

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/456.hmmer/exe/hmmer_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 456.hmmer ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/456.hmmer/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/456.hmmer/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=456
NAME=hmmer
SOURCES= alphabet.c core_algorithms.c debug.c display.c emit.c emulation.c \
	 fast_algorithms.c histogram.c hmmio.c hmmcalibrate.c hmmsearch.c \
	 mathsupport.c masks.c misc.c modelmakers.c plan7.c plan9.c postprob.c \
	 prior.c tophits.c trace.c ucbqsort.c a2m.c aligneval.c alignio.c \
	 clustal.c cluster.c dayhoff.c eps.c file.c getopt.c gki.c gsi.c \
	 hsregex.c iupac.c msa.c msf.c phylip.c revcomp.c rk.c selex.c \
	 seqencode.c shuffle.c sqerror.c sqio.c squidcore.c sre_ctype.c \
	 sre_math.c sre_random.c sre_string.c ssi.c stack.c stockholm.c \
	 translate.c types.c vectorops.c weight.c
EXEBASE=hmmer
NEED_MATH=yes
BENCHLANG=C
ONESTEP=
CONESTEP=

CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 1e-05
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = hmmer
basepeak         = 0
benchdir         = benchspec
benchmark        = 456.hmmer
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = hmmer_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = hmmer
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 456
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/456.hmmer
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 0.002
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 10
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '456.hmmer' started at: Sat Feb  8 07:06:49 2020 (1581106009)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:49 2020 (1581106009)
rm -rf hmmer hmmer.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:50 2020 (1581106010)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:50 2020 (1581106010)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o alphabet.o -DSPEC_CPU -DNDEBUG           -DSPEC_CPU_LP64         alphabet.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [alphabet.o] Error 1
Stop make command: Sat Feb  8 07:06:52 2020 (1581106012)
Elapsed time for make command: 00:00:02 (2)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/456.hmmer/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '456.hmmer' ended at: Sat Feb  8 07:06:52 2020 (1581106012)
  Elapsed compile for '456.hmmer': 00:00:03 (3)
*** Error building 456.hmmer

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/458.sjeng/exe/sjeng_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 458.sjeng ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/458.sjeng/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/458.sjeng/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=458
NAME=sjeng
SOURCES= attacks.c book.c crazy.c draw.c ecache.c epd.c eval.c leval.c \
	 moves.c neval.c partner.c proof.c rcfile.c search.c see.c seval.c \
	 sjeng.c ttable.c utils.c
EXEBASE=sjeng
NEED_MATH=
BENCHLANG=C
ONESTEP=
CONESTEP=

CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = sjeng
basepeak         = 0
benchdir         = benchspec
benchmark        = 458.sjeng
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = sjeng_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = sjeng
nc               = 0
need_math        = 
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 458
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/458.sjeng
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '458.sjeng' started at: Sat Feb  8 07:06:52 2020 (1581106012)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:52 2020 (1581106012)
rm -rf sjeng sjeng.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:53 2020 (1581106013)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:53 2020 (1581106013)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o attacks.o -DSPEC_CPU -DNDEBUG           -DSPEC_CPU_LP64         attacks.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [attacks.o] Error 1
Stop make command: Sat Feb  8 07:06:54 2020 (1581106014)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/458.sjeng/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '458.sjeng' ended at: Sat Feb  8 07:06:54 2020 (1581106014)
  Elapsed compile for '458.sjeng': 00:00:02 (2)
*** Error building 458.sjeng

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/462.libquantum/exe/libquantum_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 462.libquantum ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/462.libquantum/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/462.libquantum/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=462
NAME=libquantum
SOURCES= classic.c complex.c decoherence.c expn.c gates.c matrix.c \
	 measure.c oaddn.c objcode.c omuln.c qec.c qft.c qureg.c shor.c version.c \
	 specrand.c
EXEBASE=libquantum
NEED_MATH=yes
BENCHLANG=C
ONESTEP=
CONESTEP=

CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CPORTABILITY     = -DSPEC_CPU_LINUX
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = libquantum
basepeak         = 0
benchdir         = benchspec
benchmark        = 462.libquantum
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = libquantum_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = libquantum
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes60          =  462.libquantum: -DSPEC_CPU_LINUX
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 462
obiwan           = 1
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/462.libquantum
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '462.libquantum' started at: Sat Feb  8 07:06:54 2020 (1581106014)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:54 2020 (1581106014)
rm -rf libquantum libquantum.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:55 2020 (1581106015)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:55 2020 (1581106015)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o classic.o -DSPEC_CPU -DNDEBUG           -DSPEC_CPU_LP64 -DSPEC_CPU_LINUX        classic.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [classic.o] Error 1
Stop make command: Sat Feb  8 07:06:56 2020 (1581106016)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/462.libquantum/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '462.libquantum' ended at: Sat Feb  8 07:06:56 2020 (1581106016)
  Elapsed compile for '462.libquantum': 00:00:02 (2)
*** Error building 462.libquantum

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/464.h264ref/exe/h264ref_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 464.h264ref ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/464.h264ref/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/464.h264ref/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=464
NAME=h264ref
SOURCES= annexb.c biariencode.c block.c cabac.c configfile.c context_ini.c \
	 decoder.c explicit_gop.c fast_me.c filehandle.c fmo.c header.c image.c \
	 intrarefresh.c leaky_bucket.c lencod.c loopFilter.c macroblock.c \
	 mb_access.c mbuffer.c memalloc.c mv-search.c nal.c nalu.c nalucommon.c \
	 output.c parset.c parsetcommon.c q_matrix.c q_offsets.c ratectl.c \
	 rdopt.c rdopt_coding_state.c rdpicdecision.c refbuf.c rtp.c sei.c \
	 slice.c transform8x8.c vlc.c weighted_prediction.c specrand.c
EXEBASE=h264ref
NEED_MATH=1
BENCHLANG=C
ONESTEP=
CONESTEP=

CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = h264ref
basepeak         = 0
benchdir         = benchspec
benchmark        = 464.h264ref
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = h264ref_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 1
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 1
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = h264ref
nc               = 0
need_math        = 1
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 464
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/464.h264ref
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '464.h264ref' started at: Sat Feb  8 07:06:56 2020 (1581106016)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:56 2020 (1581106016)
rm -rf h264ref h264ref.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:57 2020 (1581106017)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:57 2020 (1581106017)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o annexb.o -DSPEC_CPU -DNDEBUG           -DSPEC_CPU_LP64         annexb.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [annexb.o] Error 1
Stop make command: Sat Feb  8 07:06:58 2020 (1581106018)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/464.h264ref/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '464.h264ref' ended at: Sat Feb  8 07:06:58 2020 (1581106018)
  Elapsed compile for '464.h264ref': 00:00:02 (2)
*** Error building 464.h264ref

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/470.lbm/exe/lbm_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 470.lbm ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/470.lbm/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/470.lbm/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=470
NAME=lbm
SOURCES= lbm.c main.c
EXEBASE=lbm
NEED_MATH=yes
BENCHLANG=C
ONESTEP=
CONESTEP=

CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 1e-07
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = lbm
basepeak         = 0
benchdir         = benchspec
benchmark        = 470.lbm
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = lbm_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = lbm
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 470
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/470.lbm
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '470.lbm' started at: Sat Feb  8 07:06:58 2020 (1581106018)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:06:58 2020 (1581106018)
rm -rf lbm lbm.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:06:59 2020 (1581106019)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:06:59 2020 (1581106019)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o lbm.o -DSPEC_CPU -DNDEBUG           -DSPEC_CPU_LP64         lbm.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [lbm.o] Error 1
Stop make command: Sat Feb  8 07:07:00 2020 (1581106020)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/470.lbm/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '470.lbm' ended at: Sat Feb  8 07:07:00 2020 (1581106020)
  Elapsed compile for '470.lbm': 00:00:02 (2)
*** Error building 470.lbm

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/471.omnetpp/exe/omnetpp_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 471.omnetpp ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/471.omnetpp/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/471.omnetpp/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=471
NAME=omnetpp
SOURCES= EtherAppCli.cc EtherAppCli_n.cc EtherAppSrv.cc EtherAppSrv_n.cc \
	 EtherApp_m.cc EtherBus.cc EtherBus_n.cc EtherCtrl_m.cc EtherEncap.cc \
	 EtherEncap_n.cc EtherFrame_m.cc EtherHost_n.cc EtherHub.cc EtherHub_n.cc \
	 EtherLLC.cc EtherLLC_n.cc EtherMAC.cc EtherMAC_n.cc EtherSwitch_n.cc \
	 LargeNet_n.cc MACAddress.cc MACAddress_m.cc MACRelayUnitBase.cc \
	 MACRelayUnitNP.cc MACRelayUnitNP_n.cc MACRelayUnitPP.cc \
	 MACRelayUnitPP_n.cc MACRelayUnit_n.cc Networks_n.cc eth-index_n.cc \
	 utils.cc libs/cmdenv/cmdenv.cc libs/cmdenv/enumstr.cc \
	 libs/cmdenv/heap.cc libs/envir/akoutvectormgr.cc libs/envir/args.cc \
	 libs/envir/cenvir.cc libs/envir/cinifile.cc libs/envir/filemgrs.cc \
	 libs/envir/main.cc libs/envir/omnetapp.cc libs/envir/patmatch.cc \
	 libs/envir/platdep.cc libs/envir/seeds.cc libs/envir/slaveapp.cc \
	 libs/envir/speedmtr.cc libs/sim/carray.cc libs/sim/cexception.cc \
	 libs/sim/cmessage.cc libs/sim/cpar.cc libs/sim/ctypes.cc \
	 libs/sim/task.cc libs/sim/cchannel.cc libs/sim/cfsm.cc \
	 libs/sim/cmodule.cc libs/sim/cpsquare.cc libs/sim/cvarhist.cc \
	 libs/sim/util.cc libs/sim/ccoroutine.cc libs/sim/cgate.cc \
	 libs/sim/cmsgheap.cc libs/sim/cqueue.cc libs/sim/cwatch.cc \
	 libs/sim/cdensity.cc libs/sim/chead.cc libs/sim/cnetmod.cc \
	 libs/sim/csimul.cc libs/sim/distrib.cc libs/sim/cdetect.cc \
	 libs/sim/chist.cc libs/sim/cobject.cc libs/sim/cstat.cc \
	 libs/sim/errmsg.cc libs/sim/cdispstr.cc libs/sim/cksplit.cc \
	 libs/sim/coutvect.cc libs/sim/cstruct.cc libs/sim/onstartup.cc \
	 libs/sim/cenum.cc libs/sim/cllist.cc libs/sim/cpacket.cc \
	 libs/sim/ctopo.cc libs/sim/random.cc libs/sim/std/netpack.cc \
	 libs/spec/spec_qsort.cc
EXEBASE=omnetpp
NEED_MATH=yes
BENCHLANG=CXX
ONESTEP=
CXXONESTEP=

BENCH_FLAGS      = -I. -Iomnet_include -Ilibs/envir
CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 1e-06
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = omnetpp
basepeak         = 0
benchdir         = benchspec
benchmark        = 471.omnetpp
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = omnetpp_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = omnetpp
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 471
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/471.omnetpp
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 1e-05
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '471.omnetpp' started at: Sat Feb  8 07:07:00 2020 (1581106020)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:07:00 2020 (1581106020)
rm -rf omnetpp omnetpp.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:07:01 2020 (1581106021)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:07:01 2020 (1581106021)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++ -c -o EtherAppCli.o -DSPEC_CPU -DNDEBUG -I. -Iomnet_include -Ilibs/envir      -DSPEC_CPU_LP64       EtherAppCli.cc
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [EtherAppCli.o] Error 1
Stop make command: Sat Feb  8 07:07:02 2020 (1581106022)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/471.omnetpp/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '471.omnetpp' ended at: Sat Feb  8 07:07:02 2020 (1581106022)
  Elapsed compile for '471.omnetpp': 00:00:02 (2)
*** Error building 471.omnetpp

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/473.astar/exe/astar_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 473.astar ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/473.astar/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/473.astar/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=473
NAME=astar
SOURCES= CreateWay_.cpp Places_.cpp RegBounds_.cpp RegMng_.cpp Way2_.cpp \
	 WayInit_.cpp Library.cpp Random.cpp Region_.cpp RegWay_.cpp Way_.cpp
EXEBASE=astar
NEED_MATH=yes
BENCHLANG=CXX
ONESTEP=
CXXONESTEP=

BENCH_FLAGS      = -DSPEC_CPU_LITTLE_ENDIAN
CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
CXXPORTABILITY   = -Wno-reserved-user-defined-literal
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = astar
basepeak         = 0
benchdir         = benchspec
benchmark        = 473.astar
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = astar_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = astar
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 473
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/473.astar
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 0.001
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '473.astar' started at: Sat Feb  8 07:07:02 2020 (1581106022)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:07:02 2020 (1581106022)
rm -rf astar astar.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:07:03 2020 (1581106023)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:07:03 2020 (1581106023)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++ -c -o CreateWay_.o -DSPEC_CPU -DNDEBUG -DSPEC_CPU_LITTLE_ENDIAN      -DSPEC_CPU_LP64 -Wno-reserved-user-defined-literal      CreateWay_.cpp
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [CreateWay_.o] Error 1
Stop make command: Sat Feb  8 07:07:04 2020 (1581106024)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/473.astar/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '473.astar' ended at: Sat Feb  8 07:07:04 2020 (1581106024)
  Elapsed compile for '473.astar': 00:00:02 (2)
*** Error building 473.astar

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/482.sphinx3/exe/sphinx_livepretend_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 482.sphinx3 ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/482.sphinx3/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/482.sphinx3/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=482
NAME=sphinx3
SOURCES= spec_main_live_pretend.c parse_args_file.c live.c agc.c \
	 approx_cont_mgau.c ascr.c beam.c bio.c case.c ckd_alloc.c cmd_ln.c cmn.c \
	 cmn_prior.c cont_mgau.c dict.c dict2pid.c err.c feat.c fillpen.c glist.c \
	 gs.c hash.c heap.c hmm.c io.c kb.c kbcore.c lextree.c lm.c lmclass.c \
	 logs3.c mdef.c new_fe.c new_fe_sp.c profile.c specrand.c str2words.c \
	 subvq.c tmat.c unlimit.c utt.c vector.c vithist.c wid.c
EXEBASE=sphinx_livepretend
NEED_MATH=yes
BENCHLANG=C
ONESTEP=
CONESTEP=

BENCH_FLAGS      = -I. -DSPEC_CPU -DHAVE_CONFIG_H -I. -Ilibutil 
CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = sphinx_livepretend
basepeak         = 0
benchdir         = benchspec
benchmark        = 482.sphinx3
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = sphinx_livepretend_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 1
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = sphinx3
nc               = 0
need_math        = yes
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 482
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/482.sphinx3
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '482.sphinx3' started at: Sat Feb  8 07:07:04 2020 (1581106024)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:07:04 2020 (1581106024)
rm -rf sphinx_livepretend sphinx_livepretend.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:07:05 2020 (1581106025)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:07:05 2020 (1581106025)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o spec_main_live_pretend.o -DSPEC_CPU -DNDEBUG -I. -DSPEC_CPU -DHAVE_CONFIG_H -I. -Ilibutil           -DSPEC_CPU_LP64         spec_main_live_pretend.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [spec_main_live_pretend.o] Error 1
Stop make command: Sat Feb  8 07:07:06 2020 (1581106026)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/482.sphinx3/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '482.sphinx3' ended at: Sat Feb  8 07:07:06 2020 (1581106026)
  Elapsed compile for '482.sphinx3': 00:00:02 (2)
*** Error building 482.sphinx3

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/483.xalancbmk/exe/Xalan_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 483.xalancbmk ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/483.xalancbmk/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/483.xalancbmk/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=483
NAME=xalancbmk
SOURCES= AIXPlatformUtils.cpp CSetDefs.cpp BinHTTPURLInputStream.cpp \
	 Win32PlatformUtils.cpp Win32MsgLoader.cpp Win32TransService.cpp \
	 Win32TransService2.cpp WinSockNetAccessor.cpp SunCCDefs.cpp \
	 SolarisPlatformUtils.cpp GCCDefs.cpp LinuxPlatformUtils.cpp \
	 MIPSproDefs.cpp IRIXPlatformUtils.cpp HPCCDefs.cpp HPPlatformUtils.cpp \
	 WFXMLScanner.cpp ASCIIRangeFactory.cpp AbstractDOMParser.cpp \
	 AbstractNumericFacetValidator.cpp AbstractNumericValidator.cpp \
	 AbstractStringValidator.cpp AllContentModel.cpp \
	 AnySimpleTypeDatatypeValidator.cpp AnyURIDatatypeValidator.cpp \
	 AttrImpl.cpp AttrMapImpl.cpp AttrNSImpl.cpp BMPattern.cpp Base64.cpp \
	 Base64BinaryDatatypeValidator.cpp BinFileInputStream.cpp \
	 BinFileOutputStream.cpp BinInputStream.cpp BinMemInputStream.cpp \
	 BinMemOutputStream.cpp BinOutputStream.cpp BitSet.cpp \
	 BlockRangeFactory.cpp BooleanDatatypeValidator.cpp CDATASectionImpl.cpp \
	 CMAny.cpp CMBinaryOp.cpp CMUnaryOp.cpp CharToken.cpp \
	 CharacterDataImpl.cpp ChildNode.cpp ClosureToken.cpp CommentImpl.cpp \
	 ComplexTypeInfo.cpp ConcatToken.cpp ConditionToken.cpp \
	 ContentLeafNameTypeVector.cpp ContentSpecNode.cpp DFAContentModel.cpp \
	 DGXMLScanner.cpp DOMAttrImpl.cpp DOMAttrMapImpl.cpp DOMAttrNSImpl.cpp \
	 DOMBuilderImpl.cpp DOMCDATASectionImpl.cpp DOMCharacterDataImpl.cpp \
	 DOMChildNode.cpp DOMCommentImpl.cpp DOMConfigurationImpl.cpp \
	 DOMDeepNodeListImpl.cpp DOMDocumentFragmentImpl.cpp DOMDocumentImpl.cpp \
	 DOMDocumentTypeImpl.cpp DOMElementImpl.cpp DOMElementNSImpl.cpp \
	 DOMEntityImpl.cpp DOMEntityReferenceImpl.cpp DOMErrorImpl.cpp \
	 DOMException.cpp DOMImplementationImpl.cpp DOMImplementationRegistry.cpp \
	 DOMLocatorImpl.cpp DOMNamedNodeMapImpl.cpp DOMNodeIDMap.cpp \
	 DOMNodeImpl.cpp DOMNodeIteratorImpl.cpp DOMNodeListImpl.cpp \
	 DOMNodeVector.cpp DOMNormalizer.cpp DOMNotationImpl.cpp \
	 DOMParentNode.cpp DOMParser.cpp DOMProcessingInstructionImpl.cpp \
	 DOMRangeException.cpp DOMRangeImpl.cpp DOMString.cpp DOMStringPool.cpp \
	 DOMTextImpl.cpp DOMTreeWalkerImpl.cpp DOMTypeInfoImpl.cpp \
	 DOMWriterImpl.cpp DOMXPathException.cpp DOM_Attr.cpp \
	 DOM_CDATASection.cpp DOM_CharacterData.cpp DOM_Comment.cpp \
	 DOM_DOMException.cpp DOM_DOMImplementation.cpp DOM_Document.cpp \
	 DOM_DocumentFragment.cpp DOM_DocumentType.cpp DOM_Element.cpp \
	 DOM_Entity.cpp DOM_EntityReference.cpp DOM_NamedNodeMap.cpp DOM_Node.cpp \
	 DOM_NodeFilter.cpp DOM_NodeIterator.cpp DOM_NodeList.cpp \
	 DOM_Notation.cpp DOM_ProcessingInstruction.cpp DOM_Range.cpp \
	 DOM_RangeException.cpp DOM_Text.cpp DOM_TreeWalker.cpp DOM_XMLDecl.cpp \
	 DStringPool.cpp DTDAttDef.cpp DTDAttDefList.cpp DTDElementDecl.cpp \
	 DTDEntityDecl.cpp DTDGrammar.cpp DTDScanner.cpp DTDValidator.cpp \
	 DatatypeValidator.cpp DatatypeValidatorFactory.cpp \
	 DateDatatypeValidator.cpp DateTimeDatatypeValidator.cpp \
	 DateTimeValidator.cpp DayDatatypeValidator.cpp \
	 DecimalDatatypeValidator.cpp DeepNodeListImpl.cpp \
	 DefaultPanicHandler.cpp DocumentFragmentImpl.cpp DocumentImpl.cpp \
	 DocumentTypeImpl.cpp DomMemDebug.cpp DoubleDatatypeValidator.cpp \
	 Dummy.cpp DurationDatatypeValidator.cpp ENTITYDatatypeValidator.cpp \
	 ElemStack.cpp ElementDefinitionImpl.cpp ElementImpl.cpp \
	 ElementNSImpl.cpp EncodingValidator.cpp EntityImpl.cpp \
	 EntityReferenceImpl.cpp FieldActivator.cpp FieldValueMap.cpp \
	 FloatDatatypeValidator.cpp GeneralAttributeCheck.cpp Grammar.cpp \
	 GrammarResolver.cpp HashPtr.cpp HashXMLCh.cpp HeaderDummy.cpp HexBin.cpp \
	 HexBinaryDatatypeValidator.cpp IC_Field.cpp IC_Key.cpp IC_KeyRef.cpp \
	 IC_Selector.cpp IC_Unique.cpp IDDatatypeValidator.cpp \
	 IDREFDatatypeValidator.cpp IGXMLScanner.cpp IGXMLScanner2.cpp \
	 IconvTransService.cpp IdentityConstraint.cpp InMemMsgLoader.cpp \
	 InputSource.cpp KVStringPair.cpp ListDatatypeValidator.cpp \
	 LocalFileFormatTarget.cpp LocalFileInputSource.cpp Match.cpp \
	 MemBufFormatTarget.cpp MemBufInputSource.cpp MemoryManagerArrayImpl.cpp \
	 MemoryManagerImpl.cpp MixedContentModel.cpp ModifierToken.cpp \
	 MonthDatatypeValidator.cpp MonthDayDatatypeValidator.cpp Mutexes.cpp \
	 NCNameDatatypeValidator.cpp NOTATIONDatatypeValidator.cpp \
	 NameDatatypeValidator.cpp NamedNodeMapImpl.cpp NamespaceScope.cpp \
	 NodeIDMap.cpp NodeImpl.cpp NodeIteratorImpl.cpp NodeListImpl.cpp \
	 NodeVector.cpp NotationImpl.cpp Op.cpp OpFactory.cpp PSVIAttribute.cpp \
	 PSVIAttributeList.cpp PSVIElement.cpp PSVIItem.cpp PanicHandler.cpp \
	 ParenToken.cpp ParentNode.cpp ParserForXMLSchema.cpp PlatformUtils.cpp \
	 ProcessingInstructionImpl.cpp QName.cpp QNameDatatypeValidator.cpp \
	 RangeFactory.cpp RangeImpl.cpp RangeToken.cpp RangeTokenMap.cpp \
	 ReaderMgr.cpp RefCountedImpl.cpp RegularExpression.cpp RegxParser.cpp \
	 RegxUtil.cpp SAX2XMLReaderImpl.cpp SAXException.cpp \
	 SAXParseException.cpp SAXParser.cpp SGXMLScanner.cpp SchemaAttDef.cpp \
	 SchemaAttDefList.cpp SchemaElementDecl.cpp SchemaGrammar.cpp \
	 SchemaInfo.cpp SchemaSymbols.cpp SchemaValidator.cpp \
	 SimpleContentModel.cpp StdInInputSource.cpp StdOutFormatTarget.cpp \
	 StringDatatypeValidator.cpp StringPool.cpp StringToken.cpp \
	 SubstitutionGroupComparator.cpp SynchronizedStringPool.cpp TextImpl.cpp \
	 TimeDatatypeValidator.cpp Token.cpp TokenFactory.cpp TransService.cpp \
	 TraverseSchema.cpp TreeWalkerImpl.cpp URLInputSource.cpp \
	 UnicodeRangeFactory.cpp UnionDatatypeValidator.cpp UnionToken.cpp \
	 ValidationContextImpl.cpp ValueStore.cpp ValueStoreCache.cpp \
	 VecAttrListImpl.cpp VecAttributesImpl.cpp WFXMLScanner.cpp \
	 Wrapper4DOMInputSource.cpp Wrapper4InputSource.cpp \
	 XML256TableTranscoder.cpp XML88591Transcoder.cpp XMLASCIITranscoder.cpp \
	 XMLAbstractDoubleFloat.cpp XMLAttDef.cpp XMLAttDefList.cpp XMLAttr.cpp \
	 XMLBigDecimal.cpp XMLBigInteger.cpp XMLBuffer.cpp XMLBufferMgr.cpp \
	 XMLCanRepGroup.cpp XMLChTranscoder.cpp XMLChar.cpp XMLContentModel.cpp \
	 XMLDTDDescription.cpp XMLDTDDescriptionImpl.cpp XMLDateTime.cpp \
	 XMLDeclImpl.cpp XMLDouble.cpp XMLEBCDICTranscoder.cpp XMLElementDecl.cpp \
	 XMLEntityDecl.cpp XMLException.cpp XMLFloat.cpp XMLFormatter.cpp \
	 XMLGrammarDescription.cpp XMLGrammarPoolImpl.cpp \
	 XMLIBM1047Transcoder.cpp XMLIBM1140Transcoder.cpp XMLMsgLoader.cpp \
	 XMLNotationDecl.cpp XMLNumber.cpp XMLRangeFactory.cpp XMLReader.cpp \
	 XMLRecognizer.cpp XMLRefInfo.cpp XMLScanner.cpp XMLScannerResolver.cpp \
	 XMLSchemaDescription.cpp XMLSchemaDescriptionImpl.cpp XMLString.cpp \
	 XMLStringTokenizer.cpp XMLUCSTranscoder.cpp XMLURL.cpp \
	 XMLUTF16Transcoder.cpp XMLUTF8Transcoder.cpp XMLUni.cpp \
	 XMLUniCharacter.cpp XMLUri.cpp XMLValidator.cpp XMLWin1252Transcoder.cpp \
	 XMemory.cpp XObjectComparator.cpp XPathMatcher.cpp XPathMatcherStack.cpp \
	 XPathSymbols.cpp XProtoType.cpp XSAnnotation.cpp \
	 XSAttributeDeclaration.cpp XSAttributeGroupDefinition.cpp \
	 XSAttributeUse.cpp XSComplexTypeDefinition.cpp XSDDOMParser.cpp \
	 XSDElementNSImpl.cpp XSDErrorReporter.cpp XSDLocator.cpp \
	 XSElementDeclaration.cpp XSFacet.cpp XSIDCDefinition.cpp XSModel.cpp \
	 XSModelGroup.cpp XSModelGroupDefinition.cpp XSMultiValueFacet.cpp \
	 XSNamespaceItem.cpp XSNotationDeclaration.cpp XSObject.cpp \
	 XSObjectFactory.cpp XSParticle.cpp XSSimpleTypeDefinition.cpp \
	 XSTypeDefinition.cpp XSWildcard.cpp XSerializeEngine.cpp \
	 XTemplateComparator.cpp XTemplateSerializer.cpp XUtil.cpp \
	 XercesAttGroupInfo.cpp XercesDOMParser.cpp XercesElementWildcard.cpp \
	 XercesGroupInfo.cpp XercesXPath.cpp YearDatatypeValidator.cpp \
	 YearMonthDatatypeValidator.cpp sax2Dummy.cpp DOMServices.cpp \
	 DOMSupport.cpp DOMSupportDefault.cpp DOMSupportException.cpp \
	 DOMSupportInit.cpp TreeWalker.cpp XalanDocumentPrefixResolver.cpp \
	 XalanNamespacesStack.cpp AttributeListImpl.cpp AttributesImpl.cpp \
	 DOMStringHelper.cpp DOMStringPrintWriter.cpp DoubleSupport.cpp \
	 Writer.cpp ExecutionContext.cpp FormatterListener.cpp \
	 NamedNodeMapAttributeList.cpp NullPrintWriter.cpp \
	 PlatformSupportInit.cpp PrefixResolver.cpp PrintWriter.cpp \
	 Resettable.cpp StdBinInputStream.cpp StringTokenizer.cpp URISupport.cpp \
	 XSLException.cpp XalanBitmap.cpp XalanDOMStringCache.cpp \
	 XalanDOMStringAllocator.cpp XalanDOMStringHashTable.cpp \
	 XalanDOMStringPool.cpp XalanDecimalFormatSymbols.cpp \
	 XalanEncodingPropertyCache.cpp XalanFStreamOutputStream.cpp \
	 XalanFileOutputStream.cpp XalanICUMessageLoader.cpp \
	 XalanInMemoryMessageLoader.cpp XalanMessageLoader.cpp \
	 XalanNLSMessageLoader.cpp XalanNullOutputStream.cpp \
	 XalanNumberFormat.cpp XalanOutputStream.cpp \
	 XalanOutputStreamPrintWriter.cpp XalanParsedURI.cpp \
	 XalanReferenceCountedObject.cpp XalanSimplePrefixResolver.cpp \
	 XalanStdOutputStream.cpp XalanTranscodingServices.cpp \
	 XalanToXercesTranscoderWrapper.cpp XalanUTF16Transcoder.cpp \
	 XalanXMLChar.cpp NodeNameTreeWalker.cpp ICUResHandler.cpp \
	 InMemHandler.cpp MsgFileOutputStream.cpp NLSHandler.cpp SAX2Handler.cpp \
	 XalanMsgLib.cpp FormatterToDOM.cpp FormatterToHTML.cpp \
	 FormatterToNull.cpp FormatterToText.cpp FormatterToXML.cpp \
	 FormatterToXMLBase.cpp FormatterToXML_UTF16.cpp FormatterToXML_UTF8.cpp \
	 XMLSupportInit.cpp FormatterTreeWalker.cpp XMLParserLiaison.cpp \
	 XMLSupportException.cpp XalanHTMLElementsProperties.cpp \
	 ElementPrefixResolverProxy.cpp FormatterStringLengthCounter.cpp \
	 Function.cpp FunctionConcat.cpp FunctionContains.cpp FunctionID.cpp \
	 FunctionLang.cpp FunctionNamespaceURI.cpp FunctionNormalizeSpace.cpp \
	 FunctionStartsWith.cpp FunctionString.cpp FunctionSubstring.cpp \
	 FunctionSubstringAfter.cpp FunctionSubstringBefore.cpp \
	 FunctionTranslate.cpp MutableNodeRefList.cpp NodeRefList.cpp \
	 NodeRefListBase.cpp XBoolean.cpp XNodeSet.cpp XNodeSetAllocator.cpp \
	 XNodeSetBase.cpp XNodeSetNodeProxy.cpp XNodeSetNodeProxyAllocator.cpp \
	 XNodeSetResultTreeFragProxy.cpp XNull.cpp XNumber.cpp \
	 XNumberAllocator.cpp XNumberBase.cpp XObject.cpp XObjectFactory.cpp \
	 XObjectFactoryDefault.cpp XObjectResultTreeFragProxy.cpp \
	 XObjectResultTreeFragProxyBase.cpp XObjectResultTreeFragProxyText.cpp \
	 XObjectTypeCallback.cpp XPath.cpp XPathAllocator.cpp \
	 XPathConstructionContext.cpp XPathConstructionContextDefault.cpp \
	 XPathEnvSupport.cpp XPathEnvSupportDefault.cpp XPathEvaluator.cpp \
	 XPathExecutionContext.cpp XPathExecutionContextDefault.cpp \
	 XPathExpression.cpp XPathFactory.cpp XPathFactoryBlock.cpp \
	 XPathFactoryDefault.cpp XPathFunctionTable.cpp XPathInit.cpp \
	 XPathParserException.cpp XPathProcessor.cpp XPathProcessorImpl.cpp \
	 XSpan.cpp XString.cpp XStringAdapter.cpp XStringAdapterAllocator.cpp \
	 XStringAllocator.cpp XStringBase.cpp XStringCached.cpp \
	 XStringCachedAllocator.cpp XStringReference.cpp \
	 XStringReferenceAllocator.cpp XToken.cpp XTokenNumberAdapter.cpp \
	 XUnknown.cpp XTokenNumberAdapterAllocator.cpp XTokenStringAdapter.cpp \
	 XTokenStringAdapterAllocator.cpp \
	 XalanDocumentFragmentNodeRefListBaseProxy.cpp XalanQName.cpp \
	 XalanQNameByReference.cpp XalanQNameByValue.cpp \
	 XalanQNameByValueAllocator.cpp XalanXPathException.cpp XPathCAPI.cpp \
	 AVTPart.cpp AVT.cpp AVTPartSimple.cpp AVTPartXPath.cpp Constants.cpp \
	 CountersTable.cpp ElemApplyImport.cpp ElemApplyTemplates.cpp \
	 ElemAttribute.cpp ElemChoose.cpp ElemAttributeSet.cpp \
	 ElemCallTemplate.cpp ElemComment.cpp ElemCopy.cpp ElemCopyOf.cpp \
	 ElemDecimalFormat.cpp ElemElement.cpp ElemEmpty.cpp ElemFallback.cpp \
	 ElemExtensionCall.cpp ElemForEach.cpp ElemForwardCompatible.cpp \
	 ElemIf.cpp ElemLiteralResult.cpp ElemMessage.cpp ElemNumber.cpp \
	 ElemOtherwise.cpp ElemPI.cpp ElemParam.cpp ElemSort.cpp ElemTemplate.cpp \
	 ElemTemplateElement.cpp ElemText.cpp ElemTextLiteral.cpp ElemUse.cpp \
	 ElemValueOf.cpp ElemVariable.cpp ElemWhen.cpp ElemWithParam.cpp \
	 ExtensionFunctionHandler.cpp ExtensionNSHandler.cpp FunctionCurrent.cpp \
	 FunctionDocument.cpp FunctionElementAvailable.cpp \
	 FunctionFormatNumber.cpp FunctionFunctionAvailable.cpp \
	 FunctionGenerateID.cpp FunctionKey.cpp FunctionSystemProperty.cpp \
	 FunctionUnparsedEntityURI.cpp GenerateEvent.cpp KeyTable.cpp \
	 NamespacesHandler.cpp NodeSortKey.cpp NodeSorter.cpp \
	 OutputContextStack.cpp ProblemListener.cpp ProblemListenerDefault.cpp \
	 ResultNamespacesStack.cpp SelectionEvent.cpp Stylesheet.cpp \
	 StylesheetExecutionContext.cpp StylesheetConstructionContext.cpp \
	 StylesheetConstructionContextDefault.cpp \
	 StylesheetExecutionContextDefault.cpp StylesheetHandler.cpp \
	 StylesheetRoot.cpp TopLevelArg.cpp TraceListener.cpp \
	 TraceListenerDefault.cpp TracerEvent.cpp VariablesStack.cpp \
	 XResultTreeFrag.cpp XResultTreeFragAllocator.cpp XSLTEngineImpl.cpp \
	 XSLTInit.cpp XSLTInputSource.cpp XSLTProcessor.cpp \
	 XSLTProcessorEnvSupport.cpp XSLTProcessorEnvSupportDefault.cpp \
	 XSLTProcessorException.cpp XSLTResultTarget.cpp XalanAVTAllocator.cpp \
	 XalanAVTPartSimpleAllocator.cpp XalanAVTPartXPathAllocator.cpp \
	 XalanElemApplyTemplatesAllocator.cpp XalanElemAttributeAllocator.cpp \
	 XalanElemAttributeSetAllocator.cpp XalanElemCallTemplateAllocator.cpp \
	 XalanElemElementAllocator.cpp XalanElemEmptyAllocator.cpp \
	 XalanElemLiteralResultAllocator.cpp XalanElemTemplateAllocator.cpp \
	 XalanElemTextAllocator.cpp XalanElemTextLiteralAllocator.cpp \
	 XalanTemplate.cpp XalanElemValueOfAllocator.cpp \
	 XalanElemVariableAllocator.cpp XalanNumberingResourceBundle.cpp \
	 XalanSourceTreeDocumentAllocator.cpp \
	 XalanSourceTreeDocumentFragmentAllocator.cpp XalanSpaceNodeTester.cpp \
	 XalanAttr.cpp XalanCDataSection.cpp XalanCharacterData.cpp \
	 XalanComment.cpp XalanDOMException.cpp XalanDOMImplementation.cpp \
	 XalanDOMInit.cpp XalanDOMString.cpp XalanDocument.cpp \
	 XalanDocumentFragment.cpp XalanDocumentType.cpp XalanElement.cpp \
	 XalanEmptyNamedNodeMap.cpp XalanEntity.cpp XalanEntityReference.cpp \
	 XalanNamedNodeMap.cpp XalanNode.cpp XalanNodeList.cpp \
	 XalanNodeListDummy.cpp XalanNodeListSurrogate.cpp XalanNotation.cpp \
	 XalanProcessingInstruction.cpp XalanText.cpp XalanEXSLTCommon.cpp \
	 XalanEXSLTDateTime.cpp XalanEXSLTDynamic.cpp XalanEXSLTMath.cpp \
	 XalanEXSLTSet.cpp XalanEXSLTString.cpp FunctionDifference.cpp \
	 FunctionDistinct.cpp FunctionEvaluate.cpp FunctionHasSameNodes.cpp \
	 FunctionIntersection.cpp FunctionNodeSet.cpp XalanExtensions.cpp \
	 FormatterToSourceTree.cpp XalanSourceTreeAttr.cpp \
	 XalanSourceTreeAttrNS.cpp XalanSourceTreeAttributeAllocator.cpp \
	 XalanSourceTreeAttributeNSAllocator.cpp XalanSourceTreeComment.cpp \
	 XalanSourceTreeCommentAllocator.cpp XalanSourceTreeContentHandler.cpp \
	 XalanSourceTreeDOMSupport.cpp XalanSourceTreeDocument.cpp \
	 XalanSourceTreeDocumentFragment.cpp XalanSourceTreeElement.cpp \
	 XalanSourceTreeElementA.cpp XalanSourceTreeElementAAllocator.cpp \
	 XalanSourceTreeElementANS.cpp XalanSourceTreeElementANSAllocator.cpp \
	 XalanSourceTreeElementNA.cpp XalanSourceTreeElementNAAllocator.cpp \
	 XalanSourceTreeElementNANS.cpp XalanSourceTreeElementNANSAllocator.cpp \
	 XalanSourceTreeHelper.cpp XalanSourceTreeInit.cpp \
	 XalanSourceTreeParserLiaison.cpp \
	 XalanSourceTreeProcessingInstruction.cpp \
	 XalanSourceTreeProcessingInstructionAllocator.cpp \
	 XalanSourceTreeText.cpp XalanSourceTreeTextAllocator.cpp \
	 XalanSourceTreeTextIWS.cpp XalanSourceTreeTextIWSAllocator.cpp \
	 XalanCAPI.cpp XalanCompiledStylesheetDefault.cpp \
	 XalanDefaultDocumentBuilder.cpp XalanDefaultParsedSource.cpp \
	 XalanParsedSource.cpp XalanSourceTreeWrapperParsedSource.cpp \
	 XalanTransformer.cpp XalanTransformerOutputStream.cpp \
	 XalanTransformerProblemListener.cpp XercesDOMParsedSource.cpp \
	 XercesDOMWrapperParsedSource.cpp FormatterToXercesDOM.cpp \
	 XercesAttrWrapper.cpp XercesAttrWrapperAllocator.cpp \
	 XercesCDATASectionWrapper.cpp XercesCommentWrapper.cpp \
	 XercesDOMException.cpp XercesDOMFormatterWalker.cpp \
	 XercesDOMImplementationWrapper.cpp XercesDOMSupport.cpp \
	 XercesDOMWalker.cpp XercesDOMWrapperException.cpp \
	 XercesDocumentTypeWrapper.cpp XercesDocumentWrapper.cpp \
	 XercesEntityWrapper.cpp XercesElementWrapper.cpp \
	 XercesElementWrapperAllocator.cpp XercesEntityReferenceWrapper.cpp \
	 XercesLiaisonXalanDOMStringPool.cpp XercesNamedNodeMapAttributeList.cpp \
	 XercesParserLiaison.cpp FormatterToDeprecatedXercesDOM.cpp \
	 XercesAttrBridge.cpp XercesAttributeBridgeAllocator.cpp \
	 XercesBridgeHelper.cpp XercesBridgeNavigator.cpp \
	 XercesCDATASectionBridge.cpp XercesCommentBridge.cpp \
	 XercesDOMImplementationBridge.cpp XercesDOM_NodeHack.cpp \
	 XercesDocumentBridge.cpp XercesDocumentFragmentBridge.cpp \
	 XercesDocumentTypeBridge.cpp XercesElementBridge.cpp \
	 XercesElementBridgeAllocator.cpp XercesEntityBridge.cpp \
	 XercesEntityReferenceBridge.cpp XercesNamedNodeMapBridge.cpp \
	 XercesNodeListBridge.cpp XercesNotationBridge.cpp \
	 XercesProcessingInstructionBridge.cpp XercesTextBridge.cpp \
	 XercesTextBridgeAllocator.cpp XercesToXalanNodeMap.cpp \
	 XercesTreeWalker.cpp XercesNamedNodeMapWrapper.cpp \
	 XercesNodeListWrapper.cpp XercesNotationWrapper.cpp \
	 XercesProcessingInstructionWrapper.cpp XercesTextWrapper.cpp \
	 XercesTextWrapperAllocator.cpp XercesWrapperHelper.cpp \
	 XercesWrapperNavigator.cpp XercesWrapperToXalanNodeMap.cpp XalanExe.cpp
EXEBASE=Xalan
NEED_MATH=
BENCHLANG=CXX
ONESTEP=
CXXONESTEP=

BENCH_CXXFLAGS   = -DAPP_NO_THREADS -DXALAN_INMEM_MSG_LOADER -I. -Ixercesc -Ixercesc/dom -Ixercesc/dom/impl -Ixercesc/sax -Ixercesc/util/MsgLoaders/InMemory -Ixercesc/util/Transcoders/Iconv -Ixalanc/include -DPROJ_XMLPARSER -DPROJ_XMLUTIL -DPROJ_PARSERS -DPROJ_SAX4C -DPROJ_SAX2 -DPROJ_DOM -DPROJ_VALIDATORS -DXML_USE_NATIVE_TRANSCODER -DXML_USE_INMEM_MESSAGELOADER -DXML_USE_PTHREADS
CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
CXXPORTABILITY   = -DSPEC_CPU_LINUX -std=gnu++98 -include cstdlib -include cstring
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = Xalan
basepeak         = 0
benchdir         = benchspec
benchmark        = 483.xalancbmk
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = Xalan_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = xalancbmk
nc               = 0
need_math        = 
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 483
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/483.xalancbmk
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '483.xalancbmk' started at: Sat Feb  8 07:07:07 2020 (1581106027)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:07:07 2020 (1581106027)
rm -rf Xalan Xalan.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:07:08 2020 (1581106028)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:07:08 2020 (1581106028)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++ -c -o AIXPlatformUtils.o -DSPEC_CPU -DNDEBUG  -DAPP_NO_THREADS -DXALAN_INMEM_MSG_LOADER -I. -Ixercesc -Ixercesc/dom -Ixercesc/dom/impl -Ixercesc/sax -Ixercesc/util/MsgLoaders/InMemory -Ixercesc/util/Transcoders/Iconv -Ixalanc/include -DPROJ_XMLPARSER -DPROJ_XMLUTIL -DPROJ_PARSERS -DPROJ_SAX4C -DPROJ_SAX2 -DPROJ_DOM -DPROJ_VALIDATORS -DXML_USE_NATIVE_TRANSCODER -DXML_USE_INMEM_MESSAGELOADER -DXML_USE_PTHREADS     -DSPEC_CPU_LP64 -DSPEC_CPU_LINUX -std=gnu++98 -include cstdlib -include cstring      AIXPlatformUtils.cpp
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [AIXPlatformUtils.o] Error 1
Stop make command: Sat Feb  8 07:07:09 2020 (1581106029)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/483.xalancbmk/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '483.xalancbmk' ended at: Sat Feb  8 07:07:09 2020 (1581106029)
  Elapsed compile for '483.xalancbmk': 00:00:02 (2)
*** Error building 483.xalancbmk

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/998.specrand/exe/specrand_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 998.specrand ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/998.specrand/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/998.specrand/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=998
NAME=specrand
SOURCES= main.c specrand.c
EXEBASE=specrand
NEED_MATH=
BENCHLANG=C
ONESTEP=
CONESTEP=

CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = specrand
basepeak         = 0
benchdir         = benchspec
benchmark        = 998.specrand
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = specrand_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 1
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = specrand
nc               = 0
need_math        = 
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 998
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/998.specrand
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '998.specrand' started at: Sat Feb  8 07:07:09 2020 (1581106029)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:07:09 2020 (1581106029)
rm -rf specrand specrand.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:07:10 2020 (1581106030)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:07:10 2020 (1581106030)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o main.o -DSPEC_CPU -DNDEBUG           -DSPEC_CPU_LP64         main.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [main.o] Error 1
Stop make command: Sat Feb  8 07:07:11 2020 (1581106031)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/998.specrand/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '998.specrand' ended at: Sat Feb  8 07:07:11 2020 (1581106031)
  Elapsed compile for '998.specrand': 00:00:02 (2)
*** Error building 998.specrand

------------------------------------------------------------------------
When checking options for /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/999.specrand/exe/specrand_base.fuzzalloc-access-heapify-structs, no MD5 sums were
  found in the config file.  They will be installed after build.
  Building 999.specrand ref base fuzzalloc-access-heapify-structs default: (build_base_fuzzalloc-access-heapify-structs.0000)
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/999.specrand/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.deps':

# These are the build dependencies

# End dependencies
Wrote to makefile '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/999.specrand/run/build_base_fuzzalloc-access-heapify-structs.0000/Makefile.spec':
TUNE=base
EXT=fuzzalloc-access-heapify-structs
NUMBER=999
NAME=specrand
SOURCES= main.c specrand.c
EXEBASE=specrand
NEED_MATH=
BENCHLANG=C
ONESTEP=
CONESTEP=

CC               = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast
COPTIMIZE        = 
CXX              = /scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast++
CXXOPTIMIZE      = 
ENV_AFL_PATH     = /scratch/adrianh/SPECcpu2006/afl
ENV_FUZZALLOC_HEAPIFY_STRUCTS = 1
ENV_FUZZALLOC_MSPACE_SIZE = 0x100000000
ENV_FUZZALLOC_SENSITIVITY = access
ENV_LD_LIBRARY_PATH = /scratch/adrianh/SPECcpu2006/prelink-${baseexe}:/scratch/adrianh/SPECcpu2006/fuzzalloc-release/src/runtime/malloc/
FC               = 
FOPTIMIZE        = 
FPBASE           = yes
OS               = unix
PORTABILITY      = -DSPEC_CPU_LP64
abstol           = 
action           = validate
allow_extension_override = 0
backup_config    = 1
baseexe          = specrand
basepeak         = 0
benchdir         = benchspec
benchmark        = 999.specrand
binary           = 
bindir           = exe
build_post_bench = \
    mkdir -p /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum} &&                               \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/bintools/prelink_binary.py --set-rpath --in-place --out-dir /scratch/adrianh/SPECcpu2006/prelink-${baseexe} ${baseexe} && \
    /scratch/adrianh/SPECcpu2006/fuzzalloc-scripts/dataflow/dataflow_inst_stats.py --csv /scratch/adrianh/SPECcpu2006/fuzzalloc-inst-stats.${lognum}/${benchmark}.csv /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/${benchmark}/run/build_${tune}_${ext}.0000/make.err > /dev/null
calctol          = 0
changedmd5       = 0
check_integrity  = 1
check_md5        = 1
check_version    = 1
command_add_redirect = 0
commanderrfile   = speccmds.err
commandexe       = specrand_base.fuzzalloc-access-heapify-structs
commandfile      = speccmds.cmd
commandoutfile   = speccmds.out
commandstdoutfile = speccmds.stdout
compareerrfile   = compare.err
comparefile      = compare.cmd
compareoutfile   = compare.out
comparestdoutfile = compare.stdout
compile_error    = 0
compwhite        = 
configdir        = config
configpath       = /scratch/adrianh/SPECcpu2006/config/fuzzalloc-access-heapify-structs.cfg
copies           = 1
datadir          = data
delay            = 0
deletebinaries   = 0
deletework       = 0
difflines        = 10
dirprot          = 511
endian           = 12345678
env_vars         = yes
exitvals         = spec_exit
expand_notes     = 0
expid            = 
ext              = fuzzalloc-access-heapify-structs
fake             = 0
feedback         = 1
flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
floatcompare     = 1
help             = 0
http_proxy       = 
http_timeout     = 30
ignore_errors    = yes
ignore_sigint    = 0
ignorecase       = 
info_wrap_columns = 50
inputdir         = input
iteration        = -1
iterations       = 3
line_width       = 0
locking          = 1
log              = CPU2006
log_line_width   = 0
logname          = /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log
lognum           = 267
mach             = default
mail_reports     = all
mailcompress     = 0
mailmethod       = smtp
mailport         = 25
mailserver       = 127.0.0.1
mailto           = 
make             = specmake
make_no_clobber  = 0
makeflags        = 
max_active_compares = 0
mean_anyway      = 0
min_report_runs  = 3
minimize_builddirs = 0
minimize_rundirs = 0
name             = specrand
nc               = 0
need_math        = 
no_input_handler = close
no_monitor       = 
notes0100        =  C base flags: 
notes0110        =  C++ base flags: 
notes0120        =  Fortran base flags: 
notes25          =  PORTABILITY=-DSPEC_CPU_LP64 is applied to all benchmarks in base.
notes_wrap_columns = 0
notes_wrap_indent =     
num              = 999
obiwan           = 
os_exe_ext       = 
output           = asc
output_format    = asc, pdf, Screen
output_root      = 
outputdir        = output
path             = /scratch/adrianh/SPECcpu2006/benchspec/CPU2006/999.specrand
plain_train      = 1
prefix           = 
rate             = 0
rawfile          = 
rawformat        = 0
realuser         = your name here
rebuild          = 0
reftime          = reftime
reltol           = 
reportable       = 0
resultdir        = result
review           = 0
run              = all
runspec          = /scratch/adrianh/SPECcpu2006/bin/runspec --config=fuzzalloc-access-heapify-structs --tune=base --noreportable all_except_fortran
safe_eval        = 1
section_specifier_fatal = 1
sendmail         = /usr/sbin/sendmail
setpgrp_enabled  = 1
setprocgroup     = 1
shrate           = 0
sigint           = 2
size             = ref
skipabstol       = 
skipobiwan       = 
skipreltol       = 
skiptol          = 
smarttune        = base
specdiff         = specdiff
specmake         = Makefile.YYYtArGeTYYYspec
specrun          = specinvoke
speed            = 0
srcalt           = 
srcdir           = src
stagger          = 10
strict_rundir_verify = 1
subworkdir       = work
sysinfo_program  = 
table            = 1
teeout           = yes
teerunout        = yes
test_date        = July-2019
top              = /scratch/adrianh/SPECcpu2006
tune             = base
uid              = 1090
unbuffer         = 1
update-flags     = 0
use_submit_for_speed = 0
username         = adrianh
vendor           = anon
vendor_makefiles = 0
verbose          = 5
version          = 0
version_url      = http://www.spec.org/auto/cpu2006/current_version
workdir          = run
worklist         = list
  Compile for '999.specrand' started at: Sat Feb  8 07:07:11 2020 (1581106031)
Issuing make.clean command 'specmake clean'
Start make.clean command: Sat Feb  8 07:07:11 2020 (1581106031)
rm -rf specrand specrand.exe *.o  *.fppized.f*
find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
rm -rf core 
Stop make.clean command: Sat Feb  8 07:07:12 2020 (1581106032)
Elapsed time for make.clean command: 00:00:01 (1)
Issuing make command 'specmake build'
Start make command: Sat Feb  8 07:07:12 2020 (1581106032)
/scratch/adrianh/SPECcpu2006/fuzzalloc-debug/src/tools/dataflow-clang-fast -c -o main.o -DSPEC_CPU -DNDEBUG           -DSPEC_CPU_LP64         main.c
clang (LLVM option parsing): Unknown command line argument '-access'.  Try: 'clang (LLVM option parsing) -help'
clang (LLVM option parsing): Did you mean '-mem-access'?
specmake: *** [main.o] Error 1
Stop make command: Sat Feb  8 07:07:13 2020 (1581106033)
Elapsed time for make command: 00:00:01 (1)
Error with make 'specmake build': check file '/scratch/adrianh/SPECcpu2006/benchspec/CPU2006/999.specrand/run/build_base_fuzzalloc-access-heapify-structs.0000/make.err'
  Error with make!
  Compile for '999.specrand' ended at: Sat Feb  8 07:07:13 2020 (1581106033)
  Elapsed compile for '999.specrand': 00:00:02 (2)
*** Error building 999.specrand

Build errors: 400.perlbench(base), 401.bzip2(base), 403.gcc(base), 429.mcf(base), 433.milc(base), 444.namd(base), 445.gobmk(base), 447.dealII(base), 450.soplex(base), 453.povray(base), 456.hmmer(base), 458.sjeng(base), 462.libquantum(base), 464.h264ref(base), 470.lbm(base), 471.omnetpp(base), 473.astar(base), 482.sphinx3(base), 483.xalancbmk(base), 998.specrand(base), 999.specrand(base)

Parsing Flags
  Looking at 400.perlbench base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 401.bzip2 base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 403.gcc base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 429.mcf base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 433.milc base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 444.namd base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 445.gobmk base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 447.dealII base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 450.soplex base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 453.povray base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 456.hmmer base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 458.sjeng base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 462.libquantum base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 464.h264ref base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 470.lbm base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 471.omnetpp base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 473.astar base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 482.sphinx3 base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 483.xalancbmk base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 998.specrand base fuzzalloc-access-heapify-structs default: no stored flags!
  Looking at 999.specrand base fuzzalloc-access-heapify-structs default: no stored flags!
Flag Parsing Complete

Setting Up Run Directories

-----------------------------------
Running Benchmarks
Error: 1x400.perlbench 1x401.bzip2 1x403.gcc 1x429.mcf 1x433.milc 1x444.namd 1x445.gobmk 1x447.dealII 1x450.soplex 1x453.povray 1x456.hmmer 1x458.sjeng 1x462.libquantum 1x464.h264ref 1x470.lbm 1x471.omnetpp 1x473.astar 1x482.sphinx3 1x483.xalancbmk 1x998.specrand 1x999.specrand
Producing Reports
mach: default
  ext: fuzzalloc-access-heapify-structs
    size: ref
      set: int
           Flag reduction took 0.0002272s
        format: raw -> /scratch/adrianh/SPECcpu2006/result/CINT2006.267.rsf
        format: flags -> /scratch/adrianh/SPECcpu2006/result/CINT2006.267.flags.html
        format: ASCII -> /scratch/adrianh/SPECcpu2006/result/CINT2006.267.txt
        format: PDF -> /scratch/adrianh/SPECcpu2006/result/CINT2006.267.pdf
        format: Screen ->       set: fp
           Flag reduction took 0.0000930s
        format: raw -> /scratch/adrianh/SPECcpu2006/result/CFP2006.267.rsf
        format: flags -> /scratch/adrianh/SPECcpu2006/result/CFP2006.267.flags.html
        format: ASCII -> /scratch/adrianh/SPECcpu2006/result/CFP2006.267.txt
        format: PDF -> /scratch/adrianh/SPECcpu2006/result/CFP2006.267.pdf
        format: Screen -> 
The log for this run is in /scratch/adrianh/SPECcpu2006/result/CPU2006.267.log

runspec finished at Sat Feb  8 07:07:14 2020; 50 total seconds elapsed
